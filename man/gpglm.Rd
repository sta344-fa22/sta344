% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gpglm.R
\name{gpglm}
\alias{gpglm}
\title{Fit a gpglm model (spBayes spGLM)}
\usage{
gpglm(
  formula,
  family = "binomial",
  weights = rep(1, nrow(data)),
  data,
  coords,
  chains = 4,
  n_batch = 200,
  batch_len = 100,
  cov_model = c("gaussian", "exponential", "matern", "spherical"),
  starting = list(beta = 0, phi = sqrt(3)/1, sigma.sq = 1),
  priors = list(beta.Normal = list(0, 1), phi.unif = c(sqrt(3)/52, sqrt(3)/1),
    sigma.sq.ig = c(2, 1)),
  tuning = list(beta = 1, phi = 1, sigma.sq = 1),
  burnin_frac = 0.5,
  accept_rate = 0.43,
  n_report = 50,
  verbose = FALSE
)
}
\arguments{
\item{formula}{A formula object. A symbolic description of the model to be fitted.}

\item{family}{Currently only supports binomial and poisson data using the logit
and log link functions, respectively.}

\item{weights}{An optional vector of weights to be used in the fitting process.
Weights correspond to number of trials and offset for each location for the binomial and poisson family, respectively.}

\item{data}{A data.frame object containing data of all variables used in the model.}

\item{coords}{Either a numeric matrix of coordinates or quoted column names from \code{data} to use for distance calculations.}

\item{chains}{Numeric. Number of MCMC chains to fit.}

\item{n_batch}{Numeric. Number of adaptive batches to use when fitting each chain.}

\item{batch_len}{Numeric. Number of iterations per batch.}

\item{cov_model}{Character. Name of the covariance model to use, supported values are:
"exponential", "matern", "spherical", and "gaussian"}

\item{starting}{Named list of parameter starting values, allowed names: \code{beta}, \code{sigma.sq}, \code{tau.sq}, \code{phi}, and \code{nu}.}

\item{tuning}{Names list of variance values for the MH sampler.}

\item{burnin_frac}{Numeric. Proportion of iterations to discard as burnin.}

\item{accept_rate}{Numeric. Desired acceptance rate used by the adaptive MCMC algorithm}

\item{n_report}{Numeric. The interval to report Metropolis sampler acceptance and MCMC progress.}

\item{verbose}{Logical. Should verbose output (sampling progress) be printed.}

\item{prior}{Named list of priors, each value is a vector of prior hyperparameter values. See \code{\link[spBayes:spGLM]{spBayes::spGLM()}} for details.}
}
\description{
A more user friendly (and limited) wrapper around the spBayes' spLM
model.
}
\examples{

eta = function(x) 2.5*sin(2.1*pi*(x-0.25))
d = data.frame(x=runif(n)) |>
  dplyr::mutate(
    eta = eta(x),
    p = 1/(1+exp(-eta)),
    y = rbinom(dplyr::n(), size=1, prob = p)
  )

m = gpglm(
  y~1, family="binomial",
  data = d, coords = c("x"),
  cov_model = "exponential",
  starting=list(
    "beta"=0, "phi"=3/0.1, "sigma.sq"=1, "w"=0
  ),
  tuning=list(
    "beta"=0.5, "phi"=0.5, "sigma.sq"=0.5, "w"=0.5
  ),
  priors=list(
    "beta.Normal"=list(0,1),
    "phi.unif"=c(sqrt(3)/0.5, sqrt(3)/0.01),
    "sigma.sq.ig"=c(2, 1)
  ),
  n_batch = 100,
  batch_len = 100,
  verbose = TRUE
)

newdata = data.frame(
  x=seq(0,1,length.out=101)
)

p = predict(m, newdata=newdata, coords="x", thin=50)

# Predicted y
p |>
  tidybayes::gather_draws(y[i]) |>
  ggplot2::ggplot(ggplot2::aes(x=i,y=.value)) +
    tidybayes::stat_lineribbon()

# Predicted w
p |>
  tidybayes::gather_draws(w[i]) |>
  ggplot2::ggplot(ggplot2::aes(x=i,y=.value)) +
    tidybayes::stat_lineribbon()

}
